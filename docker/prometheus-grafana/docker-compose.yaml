networks:
  monitoring: # Dedicated network for use with deployment
    driver: bridge  # Dedicated network type (use bridge)

volumes:
  prometheus_data: {} # Dedicated volume for Prometheus persistent data
  grafana_data: {}  # Dedicated volume for Grafana persistent data

services:
  node-exporter:
    image: prom/node-exporter:v1.8.2  # Adjust as needed
    container_name: node-exporter # Adjust as needed (for use with Docker network DNS resolving)
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro # Use the Read-Only option
      - /sys:/host/sys:ro # Use the Read-Only option
      - /:/rootfs:ro # Use the Read-Only option
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100  # Adjust as needed, the default Prometheus Node Exporter port is 9100
    networks:
      - monitoring  # Adjust network name as needed, keep all containers in the same dedicated network

  dcgm-exporter:
    image: nvcr.io/nvidia/k8s/dcgm-exporter:3.3.8-3.6.0-ubuntu22.04  # Adjust as needed
    container_name: dcgm-exporter # Adjust as needed (for use with Docker network DNS resolving)
    restart: unless-stopped
    environment:
      NVIDIA_VISIBLE_DEVICES: 'all'
      NVIDIA_DRIVER_CAPABILITIES: 'compute,utility'
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    expose:
      - 9400  # Adjust as needed, the default Nvidia DCGM Exporter port is 9400
    networks:
      - monitoring  # Adjust network name as needed, keep all containers in the same dedicated network

  prometheus:
    image: prom/prometheus:v2.55.0  # Adjust as needed
    container_name: prometheus # Adjust as needed (for use with Docker network DNS resolving)
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus # Adjust as needed (dedicated volume for Prometheus data)
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090  # Adjust as needed, the default Prometheus port is 9090
    networks:
      - monitoring  # Adjust network name as needed, keep all containers in the same dedicated network

  grafana:
    image: grafana/grafana-oss:11.3.0  # Adjust as needed
    container_name: grafana # Adjust as needed (for use with Docker network DNS resolving)
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana # Adjust as needed (dedicated volume for Grafana data)
    ports:
     - '3000:3000'  # Adjust as needed, the default Grafana UI port is 3000
    networks:
      - monitoring  # Adjust network name as needed, keep all containers in the same dedicated network

